Raymond Elward
Prof Joe
CSC 374
10/12/2010

1) See optimizeAndInvestigate1.c

2) a) See optimizeAndInvestigate2.c

b) int sum( int sumLimit) lives in the optimizeAndInvestigate2.o 's .text section

Here is the output:

optimizeAndInvestigate2.o:     file format elf32-i386

Disassembly of section .text:

00000000 <sum>:
   0:	55                   	push   %ebp
   1:	89 e5                	mov    %esp,%ebp
   3:	83 ec 10             	sub    $0x10,%esp
   6:	c7 45 fc 00 00 00 00 	movl   $0x0,0xfffffffc(%ebp)
   d:	c7 45 f8 01 00 00 00 	movl   $0x1,0xfffffff8(%ebp)
  14:	eb 0a                	jmp    20 <sum+0x20>
  16:	8b 45 f8             	mov    0xfffffff8(%ebp),%eax
  19:	01 45 fc             	add    %eax,0xfffffffc(%ebp)
  1c:	83 45 f8 01          	addl   $0x1,0xfffffff8(%ebp)
  20:	8b 45 f8             	mov    0xfffffff8(%ebp),%eax
  23:	3b 45 08             	cmp    0x8(%ebp),%eax
  26:	7e ee                	jle    16 <sum+0x16>
  28:	8b 45 fc             	mov    0xfffffffc(%ebp),%eax
  2b:	c9                   	leave  
  2c:	c3                   	ret  

c) limit lives in the .bss section of the optimizeAndInvestigate executable.

Here is the output for the bss section of optimizeAndInvestigate:

optimizeAndInvestigate:     file format elf32-i386

Disassembly of section .bss:

08049808 <stdin@@GLIBC_2.0>:
 8049808:	00 00 00 00                                         ....

0804980c <dtor_idx.5793>:
 804980c:	00 00 00 00                                         ....

08049810 <completed.5791>:
 8049810:	00 00 00 00                                         ....

08049814 <limit>:
 8049814:	00 00 00 00                                         ....


d) The string constant "Please enter a positive É " lives in the .rodata section of optimizeAndInvestigate.

Here is the output for optimizeAndInvestigate's rodata section:

optimizeAndInvestigate:     file format elf32-i386

Disassembly of section .rodata:

08048634 <_fp_hw>:
 8048634:	03 00 00 00                                         ....

08048638 <_IO_stdin_used>:
 8048638:	01 00 02 00                                         ....

0804863c <__dso_handle>:
 804863c:	00 00 00 00 50 6c 65 61 73 65 20 65 6e 74 65 72     ....Please enter
 804864c:	20 61 20 70 6f 73 69 74 69 76 65 20 69 6e 74 65      a positive inte
 804865c:	67 65 72 20 6c 65 73 73 20 74 68 61 6e 20 6f 72     ger less than or
 804866c:	20 65 71 75 61 6c 20 74 6f 20 31 32 38 3a 20 00      equal to 128: .
 804867c:	53 75 70 65 72 73 75 6d 28 25 64 29 20 3d 3d 20     Supersum(%d) == 
 804868c:	25 64 0a 00                                         %d..


3) See mama.c and brat.c for this answer. And the mama executable of course.
